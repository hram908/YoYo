package com.asktun.mg.activity;

import java.util.HashMap;

import net.tsz.afinal.FinalActivity;
import net.tsz.afinal.annotation.view.ViewInject;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

import com.asktun.mg.BaseActivity;
import com.asktun.mg.MyApp;
import com.asktun.mg.R;
import com.asktun.mg.UIDataProcess;
import com.asktun.mg.bean.GameInfo;
import com.asktun.mg.bean.LoginBean;
import com.asktun.mg.bean.UserMessage;
import com.asktun.mg.download.FinalDBChen;
import com.chen.jmvc.util.IResponseListener;
import com.chen.jmvc.util.Md5;
import com.chen.jmvc.util.PreferenceOperateUtils;

/**
 * 登录
 * 
 * @author Dean
 */
public class LoginActivity extends BaseActivity {

	@ViewInject(id = R.id.username)
	private EditText userName;
	@ViewInject(id = R.id.password)
	private EditText password;
	@ViewInject(id = R.id.btn_login, click = "btnClick")
	private Button loginbtn;
	@ViewInject(id = R.id.btn_register, click = "btnClick")
	private Button registerbtn;
	private PreferenceOperateUtils pou;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_login);
		FinalActivity.initInjectedView(this);

		pou = new PreferenceOperateUtils(LoginActivity.this);
		userName.setText(pou.getString("username", ""));
		password.setText(pou.getString("password", ""));
		
		MyApp.isSoundEnable = pou.getBoolean("soundSP", true);
		MyApp.isVibrateEnable = pou.getBoolean("vibrateSP", false);
		int size = userName.getText().length();
		userName.setSelection(size);
		
//		FinalDBChen fb = new FinalDBChen(this, "test.db", new GameInfo(), "msgTable", null);
	}

	private void reqLogin() {

		final String uname = userName.getText().toString();
		final String pwd = password.getText().toString();
		if (uname.equals("")) {
			showToastInThread("用户名不能为空");
			return;
		}
		if (pwd.equals("")) {
			showToastInThread("密码不能为空");
			return;
		}

		// startActivity(PageFrameActivity.class);
		// finish();

		HashMap<String, Object> params = new HashMap<String, Object>();
		params.put("user_mobile", uname);
		params.put("user_pass", Md5.MD5(pwd));

		UIDataProcess.reqData(LoginBean.class, params, null,
				new IResponseListener() {

					@Override
					public void onSuccess(Object arg0) {
						// TODO Auto-generated method stub
						LoginBean data = (LoginBean) arg0;
						if (data != null) {
							if (data.flg == 2) {
								showToast("不存在该用户");
							} else if (data.flg == 3) {
								showToast("账号被禁用");
							} else if (data.flg == 4) {
								showToast("密码错误");
							} else if (data.flg == -1) {
								showToast("缺少参数");
							} else {
								showToast("登录成功");
								pou.setString("username", uname);
								pou.setString("password", pwd);
								mApplication.setLoginbean(data);
								mApplication.startLocation();
								startActivity(PageFrameActivity.class);
								finish();
							}
						} else {
<<<<<<< .mine
							showToast("连接服务器失败,请检查网络！");
=======
							showToast("无法连接到服务器");
>>>>>>> .r564
						}
					}

					@Override
					public void onRuning(Object arg0) {
						// TODO Auto-generated method stub

					}

					@Override
					public void onReqStart() {
						// TODO Auto-generated method stub
						showProgressDialog();
					}

					@Override
					public void onFinish() {
						// TODO Auto-generated method stub
						removeProgressDialog();
					}

					@Override
					public void onFailure(Object arg0) {
						// TODO Auto-generated method stub
						showToast("连接服务器失败,请检查网络！");
					}
				});

	}

	public void btnClick(View v) {
		int id = v.getId();
		switch (id) {
		case R.id.btn_login:
			reqLogin();
			break;
		case R.id.btn_register:
			startActivity(RegisterPhoneActivity.class);
			break;
		}
	}

}